diff -u /home/mschoolderman/curve25519-atmega-20150304/small/bigint_mul256.S x25519/bigint_mul256.S
--- /home/mschoolderman/curve25519-atmega-20150304/small/bigint_mul256.S	2015-03-04 08:09:30.000000000 +0100
+++ x25519/bigint_mul256.S	2020-12-14 01:30:24.222398934 +0100
@@ -1,4 +1,4 @@
-; Authors: Michael Hutter and Peter Schwabe
+; Authors: Michael Hutter, Peter Schwabe, Marc Schoolderman
 ; Version: 2014-10-03
 ; Public domain
 
@@ -1170,8 +1170,6 @@
   EOR R27, R0
   EOR R18, R0
   EOR R19, R0
-  MOV R28, R0
-  ADD R28, R28 ; sets carry flag if R28 = 0xff
   ; add in M
   ADC R20, R4
   ADC R21, R5
@@ -1509,7 +1507,7 @@
   SBC R15, R0
   LD R0, X+
   SBC R16, R0
-  LD R0, X
+  LD R0, X+
   SBC R17, R0
   ; store borrow in R0
   SBC R0, R0
@@ -1550,27 +1548,23 @@
   ADC R16, R22
   ADC R17, R22
 
-  ;--- level 1: push absolute values on stack ---
-  ;load stack pointer
-  IN R26, 0x3D
-  IN R27, 0x3E
-  SBIW R26, 9
-  ST -X, R17
-  ST -X, R16
-  ST -X, R15
-  ST -X, R14
-  ST -X, R13
-  ST -X, R12
-  ST -X, R11
-  ST -X, R10
-  ST -X, R21
-  ST -X, R20
-  ST -X, R19
-  ST -X, R18
-  ST -X, R5
-  ST -X, R4
-  ST -X, R3
-  ST -X, R2
+  ;--- level 1: write absolute values to temp ---
+  STD Z+16, R2
+  STD Z+17, R3
+  STD Z+18, R4
+  STD Z+19, R5
+  STD Z+20, R18
+  STD Z+21, R19
+  STD Z+22, R20
+  STD Z+23, R21
+  STD Z+24, R10
+  STD Z+25, R11
+  STD Z+26, R12
+  STD Z+27, R13
+  STD Z+28, R14
+  STD Z+29, R15
+  STD Z+30, R16
+  STD Z+31, R17
   
   ;--- level 1: subtract b0-b15 ---
   LDD R6, Y+0
@@ -1662,41 +1656,45 @@
   ADC R17, R28
 
   ;--- level 1: push absolute values on stack ---
-  ST -X, R17
-  ST -X, R16
-  ST -X, R15
-  ST -X, R14
-  ST -X, R13
-  ST -X, R12
-  ST -X, R11
-  ST -X, R10
-  ST -X, R25
-  ST -X, R24
-  ST -X, R23
-  ST -X, R22
-  ST -X, R9
-  ST -X, R8
-  ST -X, R7
-  ST -X, R6
+  MOVW R26, R30
+  ADIW R26, 20
+  IN R30, 0x3D
+  IN R31, 0x3E
+  SBIW R30, 48
+  IN R20, 0x3F
+  CLI
+  OUT 0x3E, R31
+  OUT 0x3F, R20
+  OUT 0x3D, R30
+  ADIW R30, 1
+  MOVW R28, R30
+  ST Z+, R6
+  ST Z+, R7
+  ST Z+, R8
+  ST Z+, R9
+  ST Z+, R22
+  ST Z+, R23
+  ST Z+, R24
+  ST Z+, R25
+  ST Z+, R10
+  ST Z+, R11
+  ST Z+, R12
+  ST Z+, R13
+  ST Z+, R14
+  ST Z+, R15
+  ST Z+, R16
+  ST Z+, R17
 
   EOR R0, R1
   PUSH R0
 
-  ;save address of result
-  PUSH R30
-  PUSH R31
-
-  MOVW R30, R26
-  SBIW R30, 32
-  MOVW R28, R26
-  ADIW R26, 20 ;16+4 (4 times loading of X)
-
   ;--- level 1: compute M ---
   RCALL mul128
 
   ;restore address of result in Y
-  POP R29
-  POP R28
+  MOVW R28, R26
+  SBIW R28, 32
+  POP R20
 
   ;--- level 1: combine L, H, and M ---
   LDD R0, Y+0
@@ -1717,7 +1715,6 @@
   LDD R15, Y+15
 
   ;--- process sign bit ---  
-  POP R20 
   TST R20
   BRNE add_M
 
@@ -2019,6 +2016,13 @@
   STD Y+61, R11
   STD Y+62, R12
   STD Y+63, R13
+
+  ADIW R30, 31
+  IN R1, 0x3F
+  CLI
+  OUT 0x3E, R31
+  OUT 0x3F, R1
+  OUT 0x3D, R30
   
   CLR R1
   POP R29
diff -u /home/mschoolderman/curve25519-atmega-20150304/small/bigint_square256.S x25519/bigint_square256.S
--- /home/mschoolderman/curve25519-atmega-20150304/small/bigint_square256.S	2015-03-04 08:09:30.000000000 +0100
+++ x25519/bigint_square256.S	2020-12-14 10:50:37.829108989 +0100
@@ -1,5 +1,5 @@
-; Authors: Michael Hutter and Peter Schwabe
-; Version: 2014-10-15
+; Authors: Michael Hutter, Peter Schwabe, Marc Schoolderman
+; Version: 2020-12-14
 ; Public domain
 
   .global bigint_square256
@@ -1118,41 +1118,42 @@
   ADC R16, R22
   ADC R17, R22
   
-  ;--- level 1: push absolute values on stack ---
-  ;load stack pointer
-  IN R28, 0x3D
-  IN R29, 0x3E
-  SBIW R28, 7
-  ST -Y, R17
-  ST -Y, R16
-  ST -Y, R15
-  ST -Y, R14
-  ST -Y, R13
-  ST -Y, R12
-  ST -Y, R11
-  ST -Y, R10
-  ST -Y, R9
-  ST -Y, R8
-  ST -Y, R7
-  ST -Y, R6
-  ST -Y, R5
-  ST -Y, R4
-  ST -Y, R3
-  ST -Y, R2
-  
-  ;save address of result
-  PUSH R30
-  PUSH R31
+  ;--- level 1: write absolute values to temp ---
+  MOVW R28, R30
+  ADIW R28, 16
+  STD Y+0, R2
+  STD Y+1, R3
+  STD Y+2, R4
+  STD Y+3, R5
+  STD Y+4, R6
+  STD Y+5, R7
+  STD Y+6, R8
+  STD Y+7, R9
+  STD Y+8, R10
+  STD Y+9, R11
+  STD Y+10, R12
+  STD Y+11, R13
+  STD Y+12, R14
+  STD Y+13, R15
+  STD Y+14, R16
+  STD Y+15, R17
 
-  MOVW R30, R28
+  ;load stack pointer
+  IN R30, 0x3D
+  IN R31, 0x3E
   SBIW R30, 32
+  IN R0, 0x3F
+  CLI
+  OUT 0x3E, R31
+  OUT 0x3F, R0
+  OUT 0x3D, R30
+  ADIW R30, 1
 
   ;--- level 1: compute M ---
   CALLSQR128
 
   ;restore address of result in Y
-  POP R29
-  POP R28
+  SBIW R28, 16
 
   ;--- level 1: combine L, H, and M ---
   LDD R0, Y+0
@@ -1386,6 +1387,13 @@
   STD Y+62, R12
   STD Y+63, R13
 
+  ADIW R30, 31
+  IN R1, 0x3F
+  CLI
+  OUT 0x3E, R31
+  OUT 0x3F, R1
+  OUT 0x3D, R30
+
   CLR R1
   POP R29
   POP R28
diff -u /home/mschoolderman/curve25519-atmega-20150304/small/curve25519.c x25519/curve25519.c
--- /home/mschoolderman/curve25519-atmega-20150304/small/curve25519.c	2015-03-04 08:09:30.000000000 +0100
+++ x25519/curve25519.c	2020-12-14 00:39:23.998442352 +0100
@@ -12,8 +12,6 @@
   fe25519_cmov(work+4, &t, b);
 }
 
-static const fe25519 _121666 = {{0x42, 0xDB, 0x01, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};
-
 static void ladderstep(fe25519 *work)
 {
   fe25519 t[2];
@@ -44,35 +42,6 @@
   fe25519_add(xq, t1, xq);
   fe25519_square(xq, xq);
 }
-/*
-{
-  fe25519 t1,t2,t3,t4,t5,t6,t7;
-  fe25519 *x0 = work; 
-  fe25519 *xp = work+1; 
-  fe25519 *zp = work+2;
-  fe25519 *xq = work+3; 
-  fe25519 *zq = work+4;
-  fe25519_add(&t1, xp, zp);
-  fe25519_sub(&t2, xp, zp); 
-  fe25519_square(&t7, &t2);
-  fe25519_square(&t6, &t1);
-  fe25519_sub(&t5,&t6,&t7);
-  fe25519_add(&t3, xq, zq); 
-  fe25519_sub(&t4, xq, zq);
-  fe25519_mul(&t2,&t3,&t2);
-  fe25519_mul(&t3,&t4,&t1);
-  fe25519_add(xq, &t3, &t2);
-  fe25519_sub(zq, &t3, &t2);
-  fe25519_square(xq, xq);
-  fe25519_square(zq, zq);
-  fe25519_mul(zq, zq, x0);
-  fe25519_mul(xp, &t6, &t7);
-  fe25519_mul121666(zp, &t5);
-  //fe25519_mul(zp, &t5, &_121666);
-  fe25519_add(zp, zp, &t7);
-  fe25519_mul(zp, zp, &t5);
-}
-*/
 
 static void mladder(fe25519 *xr, fe25519 *zr, const unsigned char s[32])
 {
diff -u /home/mschoolderman/curve25519-atmega-20150304/small/fe25519.c x25519/fe25519.c
--- /home/mschoolderman/curve25519-atmega-20150304/small/fe25519.c	2015-03-04 08:59:34.000000000 +0100
+++ x25519/fe25519.c	2020-12-15 01:20:13.516439416 +0100
@@ -1,8 +1,8 @@
 #include "fe25519.h"
 
-extern char bigint_subp(unsigned char* r, const unsigned char* a);
-extern char bigint_mul256(unsigned char* r, const unsigned char* a, const unsigned char* b);
-extern char bigint_square256(unsigned char* r, const unsigned char* a);
+extern char bigint_subp(unsigned char* restrict r, const unsigned char* a);
+extern char bigint_mul256(unsigned char* restrict r, const unsigned char* a, const unsigned char* b);
+extern char bigint_square256(unsigned char* restrict r, const unsigned char* a);
 
 /* m = 2^255-19 = 7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed */
 // --------------------------- modulo-arithmetic operations -----------------------------
@@ -14,8 +14,6 @@
   fe25519 rt;
   c = bigint_subp(rt.v, r->v);
   fe25519_cmov(r,&rt,1-c);
-  c = bigint_subp(rt.v, r->v);
-  fe25519_cmov(r,&rt,1-c);
 }
 
 void fe25519_setzero(fe25519 *r)
@@ -43,7 +41,7 @@
 void fe25519_cmov(fe25519 *r, const fe25519 *x, unsigned char b)
 {
   unsigned char i;
-  unsigned long mask = b;
+  unsigned char mask = b;
   mask = -mask;
   for(i=0;i<32;i++) 
     r->v[i] ^= mask & (x->v[i] ^ r->v[i]);
@@ -74,16 +72,14 @@
   fe25519_red(r,t);
 } 
 
-/*
-extern void bigint_mul121666(unsigned char *r, const unsigned char *x);
+static const fe25519 _121666 = {{0x42, 0xDB, 0x01, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};
+
 void fe25519_mul121666(fe25519 *r, const fe25519 *x)
 {
   unsigned char t[64];
-  //bigint_mul256(t,x->v,_121666.v);
-  bigint_mul121666(t,x->v);
+  bigint_mul256(t,x->v,_121666.v);
   fe25519_red(r,t);
 } 
-*/
 
 void fe25519_square(fe25519 *r, const fe25519 *x)
 {
diff -u /home/mschoolderman/curve25519-atmega-20150304/small/fe25519.h x25519/fe25519.h
--- /home/mschoolderman/curve25519-atmega-20150304/small/fe25519.h	2015-03-04 08:09:30.000000000 +0100
+++ x25519/fe25519.h	2020-12-14 01:27:07.849224588 +0100
@@ -60,7 +60,7 @@
 
 extern void fe25519_sub(fe25519 *r, const fe25519 *x, const fe25519 *y);
 
-extern void fe25519_red(fe25519 *r, unsigned char *C);
+extern void fe25519_red(fe25519 *restrict r, unsigned char *C);
 
 
 #endif
Only in /home/mschoolderman/curve25519-atmega-20150304/small: fe25519_mul121666.S
diff -u /home/mschoolderman/curve25519-atmega-20150304/small/Makefile x25519/Makefile
--- /home/mschoolderman/curve25519-atmega-20150304/small/Makefile	2015-03-04 08:59:02.000000000 +0100
+++ x25519/Makefile	2020-12-14 01:25:46.730391819 +0100
@@ -14,7 +14,6 @@
 CURVE25519 = obj/fe25519.o \
 				     obj/fe25519_add.o \
 	           obj/fe25519_invert.o \
-	           obj/fe25519_mul121666.o \
 	           obj/fe25519_red.o \
 	           obj/fe25519_sub.o \
 	           obj/bigint_subp.o \
Only in /home/mschoolderman/curve25519-atmega-20150304/small: obj
Only in x25519/: patch
Common subdirectories: /home/mschoolderman/curve25519-atmega-20150304/small/test and x25519/test
